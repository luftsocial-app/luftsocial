services:
  postgres_db:
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: luftsocial
      POSTGRES_USER: root
      PGPORT: 5434
    container_name: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports: ['5434:5434']

  app-dev:
    container_name: luftsocial-dev-app
    build:
      context: .
      # dockerfile: Dockerfile.dev #using seperate dockerfile for dev
      dockerfile: Dockerfile
      target: dev
    environment:
      - PORT=3000
      - NODE_ENV=development
    ports:
      - '3100:3000'
    # profiles: #using seperate dockerfile for dev - docker compose --profile dev up --build -d
    #   - dev
    depends_on:
      - postgres_db
    command: [sh, -c, 'npm run start:dev']
    volumes:
      - .:/app:delegated
      - /app/node_modules
  # app:
  #   container_name: luftsocial-prod-app
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     # dockerfile: Dockerfile.prod #using seperate dockerfile for prod
  #     target: prod
  #   environment:
  #     - PORT=3000
  #     - NODE_ENV=production
  #   ports:
  #     - '3000:3000'
  #   # profiles:
  #   #   - prod #using seperate dockerfile for prod
  #   depends_on:
  #     - postgres_db

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin-app
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin4
    ports:
      - '5050:80'
    depends_on:
      - postgres_db

  redis:
    container_name: redis
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: /bin/sh -c "redis-server --requirepass ${REDIS_PASSWORD}"
    # environment:
    #   - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - redis-cache:/data
  redis-adapter:
    container_name: redis-adapter
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6380:6379'
    command: /bin/sh -c "redis-server --requirepass ${REDIS_PASSWORD}"
    volumes:
      - redis-adapter:/data
  bull-redis:
    container_name: bull-redis
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6381:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./src/redis.conf:/etc/redis.conf:ro
      - bull-redis:/data

  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   restart: always
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - app

volumes:
  postgres-data: {}
  redis-cache:
    driver: local
  redis-adapter:
    driver: local
  bull-redis:
    driver: local

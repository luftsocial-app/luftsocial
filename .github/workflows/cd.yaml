name: CD Workflow

on:
  push:
    branches:
      - "main"

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.3.5"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Output EC2 Public IP
        run: echo "EC2 Public IP: $(terraform output -raw ec2_public_ip)"

      - name: Upload EC2 Public IP to GitHub Secrets
        run: echo "EC2_PUBLIC_IP=$(terraform output -raw ec2_public_ip)" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup SSH Key for EC2
        run: |
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: SSH into EC2 and Deploy NestJS App
        run: |
            echo "${{ secrets.AWS_PRIVATE_KEY }}" > private_key.pem
            chmod 600 private_key.pem
            ssh -o StrictHostKeyChecking=no -i private_key.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
              # Add commands to pull Docker images and run your NestJS app
              docker-compose -f /path/to/docker-compose.yml up -d
            EOF
